{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original code, copyright and license are from [Go]{@link https://golang.org/src/math/atan2.go}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (c) 2009 The Go Authors. All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions are\n* met:\n*\n*    * Redistributions of source code must retain the above copyright\n* notice, this list of conditions and the following disclaimer.\n*    * Redistributions in binary form must reproduce the above\n* copyright notice, this list of conditions and the following disclaimer\n* in the documentation and/or other materials provided with the\n* distribution.\n*    * Neither the name of Google Inc. nor the names of its\n* contributors may be used to endorse or promote products derived from\n* this software without specific prior written permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isinfinitef = require( '@stdlib/math-base-assert-is-infinitef' );\nvar copysignf = require( '@stdlib/math-base-special-copysignf' );\nvar signbitf = require( '@stdlib/number-float32-base-signbit' );\nvar isnanf = require( '@stdlib/math-base-assert-is-nanf' );\nvar atanf = require( '@stdlib/math-base-special-atanf' );\nvar f32 = require( '@stdlib/number-float64-base-to-float32' );\nvar PINF = require( '@stdlib/constants-float32-pinf' );\nvar PI = require( '@stdlib/constants-float32-pi' );\n\n\n// VARIABLES //\n\nvar ZERO = f32( 0.0 );\nvar TWO = f32( 2.0 );\nvar THREE = f32( 3.0 );\nvar FOUR = f32( 4.0 );\n\n\n// MAIN //\n\n/**\n* Computes the angle in the plane (in radians) between the positive x-axis and the ray from `(0,0)` to the point `(x,y)` as a single-precision floating-point number.\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{atan2f}(y,\\mathrm{NaN}) &= \\mathrm{NaN}\\\\\n* \\operatorname{atan2f}(\\mathrm{NaN},x) &= \\mathrm{NaN}\\\\\n* \\operatorname{atan2f}( +0,x \\ge 0 ) &= +0 \\\\\n* \\operatorname{atan2f}( -0, x \\ge 0 ) &= -0 \\\\\n* \\operatorname{atan2f}( +0,x \\le -0 ) &= +\\Pi \\\\\n* \\operatorname{atan2f}( -0, x \\le -0 ) &= -\\Pi \\\\\n* \\operatorname{atan2f}(+\\infty, +\\infty) &= +\\tfrac{\\Pi}{4} \\\\\n* \\operatorname{atan2f}(-\\infty, +\\infty) &= -\\tfrac{\\Pi}{4} \\\\\n* \\operatorname{atan2f}(+\\infty, -\\infty) &= +\\tfrac{3\\Pi}{4} \\\\\n* \\operatorname{atan2f}(-\\infty, -\\infty) &= -\\tfrac{3\\Pi}{4} \\\\\n* \\operatorname{atan2f}(y, +\\infty) &= 0.0 \\\\\n* \\operatorname{atan2f}(y>0, -\\infty) &= +\\Pi \\\\\n* \\operatorname{atan2f}(y<0, -\\infty) &= -\\Pi \\\\\n* \\operatorname{atan2f}(+\\infty, x ) &= +\\tfrac{\\Pi}{2} \\\\\n* \\operatorname{atan2f}(-\\infty, x ) &= -\\tfrac{\\Pi}{2} \\\\\n* \\end{align*}\n* ```\n*\n* @param {number} y - `y` coordinate\n* @param {number} x - `x` coordinate\n* @returns {number} angle (in radians)\n*\n* @example\n* var v = atan2f( 2.0, 2.0 ); // => atanf( 1.0 )\n* // returns ~0.785\n*\n* @example\n* var v = atan2f( 6.0, 2.0 ); // => atanf( 3.0 )\n* // returns ~1.249\n*\n* @example\n* var v = atan2f( -1.0, -1.0 ); // => atanf( 1.0 ) - \u03C0\n* // returns ~-2.356\n*\n* @example\n* var v = atan2f( 3.0, 0.0 ); // => \u03C0/2\n* // returns ~1.571\n*\n* @example\n* var v = atan2f( -2.0, 0.0 ); // => -\u03C0/2\n* // returns ~-1.571\n*\n* @example\n* var v = atan2f( 0.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = atan2f( 3.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = atan2f( NaN, 2.0 );\n* // returns NaN\n*/\nfunction atan2f( y, x ) {\n\tvar q;\n\n\tx = f32( x );\n\ty = f32( y );\n\tif ( isnanf( x ) || isnanf( y ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isinfinitef( x ) ) {\n\t\tif ( x === PINF ) {\n\t\t\tif ( isinfinitef( y ) ) {\n\t\t\t\treturn copysignf( f32( PI / FOUR ), y );\n\t\t\t}\n\t\t\treturn copysignf( ZERO, y );\n\t\t}\n\t\t// Case: x is -Infinity\n\t\tif ( isinfinitef( y ) ) {\n\t\t\treturn copysignf( f32( f32( THREE * PI ) / FOUR ), y );\n\t\t}\n\t\treturn copysignf( PI, y );\n\t}\n\tif ( isinfinitef( y ) ) {\n\t\treturn copysignf( f32( PI / TWO ), y );\n\t}\n\tif ( y === 0.0 ) {\n\t\tif ( x >= 0.0 && !signbitf( x ) ) {\n\t\t\treturn copysignf( ZERO, y );\n\t\t}\n\t\treturn copysignf( PI, y );\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn copysignf( f32( PI / TWO ), y );\n\t}\n\tq = atanf( f32( y / x ) );\n\tif ( x < 0.0 ) {\n\t\tif ( q <= 0.0 ) {\n\t\t\treturn f32( q + PI );\n\t\t}\n\t\treturn f32( q - PI );\n\t}\n\treturn q;\n}\n\n\n// EXPORTS //\n\nmodule.exports = atan2f;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the angle in the plane (in radians) between the positive x-axis and the ray from `(0,0)` to the point `(x,y)` as a single-precision floating-point number.\n*\n* @module @stdlib/math-base-special-atan2f\n*\n* @example\n* var atan2f = require( '@stdlib/math-base-special-atan2f' );\n*\n* var v = atan2f( 2.0, 2.0 ); // => atanf( 1.0 )\n* // returns ~0.785\n*\n* v = atan2f( 6.0, 2.0 ); // => atanf( 3.0 )\n* // returns ~1.249\n*\n* v = atan2f( -1.0, -1.0 ); // => atanf( 1.0 ) - \u03C0\n* // returns ~-2.356\n*\n* v = atan2f( 3.0, 0.0 ); // => \u03C0/2\n* // returns ~1.571\n*\n* v = atan2f( -2.0, 0.0 ); // => -\u03C0/2\n* // returns ~-1.571\n*\n* v = atan2f( 0.0, 0.0 );\n* // returns 0.0\n*\n* v = atan2f( 3.0, NaN );\n* // returns NaN\n*\n* v = atan2f( NaN, 2.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar atan2f = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = atan2f;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAyDA,IAAIC,EAAc,QAAS,uCAAwC,EAC/DC,EAAY,QAAS,qCAAsC,EAC3DC,EAAW,QAAS,qCAAsC,EAC1DC,EAAS,QAAS,kCAAmC,EACrDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAM,QAAS,wCAAyC,EACxDC,EAAO,QAAS,gCAAiC,EACjDC,EAAK,QAAS,8BAA+B,EAK7CC,EAAOH,EAAK,CAAI,EAChBI,EAAMJ,EAAK,CAAI,EACfK,EAAQL,EAAK,CAAI,EACjBM,EAAON,EAAK,CAAI,EAkEpB,SAASO,EAAQC,EAAGC,EAAI,CACvB,IAAIC,EAIJ,OAFAD,EAAIT,EAAKS,CAAE,EACXD,EAAIR,EAAKQ,CAAE,EACNV,EAAQW,CAAE,GAAKX,EAAQU,CAAE,EACtB,IAEHb,EAAac,CAAE,EACdA,IAAMR,EACLN,EAAaa,CAAE,EACZZ,EAAWI,EAAKE,EAAKI,CAAK,EAAGE,CAAE,EAEhCZ,EAAWO,EAAMK,CAAE,EAGtBb,EAAaa,CAAE,EACZZ,EAAWI,EAAKA,EAAKK,EAAQH,CAAG,EAAII,CAAK,EAAGE,CAAE,EAE/CZ,EAAWM,EAAIM,CAAE,EAEpBb,EAAaa,CAAE,EACZZ,EAAWI,EAAKE,EAAKE,CAAI,EAAGI,CAAE,EAEjCA,IAAM,EACLC,GAAK,GAAO,CAACZ,EAAUY,CAAE,EACtBb,EAAWO,EAAMK,CAAE,EAEpBZ,EAAWM,EAAIM,CAAE,EAEpBC,IAAM,EACHb,EAAWI,EAAKE,EAAKE,CAAI,EAAGI,CAAE,GAEtCE,EAAIX,EAAOC,EAAKQ,EAAIC,CAAE,CAAE,EACnBA,EAAI,EACHC,GAAK,EACFV,EAAKU,EAAIR,CAAG,EAEbF,EAAKU,EAAIR,CAAG,EAEbQ,EACR,CAKAhB,EAAO,QAAUa,ICjIjB,IAAII,EAAS,IAKb,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isinfinitef", "copysignf", "signbitf", "isnanf", "atanf", "f32", "PINF", "PI", "ZERO", "TWO", "THREE", "FOUR", "atan2f", "y", "x", "q", "atan2f"]
}
